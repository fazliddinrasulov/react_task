{"ast":null,"code":"export let DatingNamesEnum;\n(function (DatingNamesEnum) {\n  DatingNamesEnum[\"all\"] = \"all\";\n  DatingNamesEnum[\"last14Days\"] = \"last14Days\";\n  DatingNamesEnum[\"last30Days\"] = \"last30Days\";\n  DatingNamesEnum[\"last60Days\"] = \"last60Days\";\n  DatingNamesEnum[\"last3Months\"] = \"last3Months\";\n  DatingNamesEnum[\"last6Months\"] = \"last6Months\";\n  DatingNamesEnum[\"last1Year\"] = \"last1Year\";\n})(DatingNamesEnum || (DatingNamesEnum = {}));\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nexport function parseDateStringIntoUTCDate(input) {\n  const parts = input.split(\"-\");\n  const year = Number(parts[0]);\n  const monthZero = Number(parts[1]) - 1; // Note: months are 0-based\n  const day = Number(parts[2]);\n  return new Date(Date.UTC(year, monthZero, day));\n}\nconst dayInMilliseconds = 1000 * 60 * 60 * 24;\nconst datingNameWithPeriodMilliseconds = {\n  [DatingNamesEnum.all]: null,\n  //\n  [DatingNamesEnum.last14Days]: dayInMilliseconds * 14,\n  [DatingNamesEnum.last30Days]: dayInMilliseconds * 30,\n  [DatingNamesEnum.last60Days]: dayInMilliseconds * 60,\n  [DatingNamesEnum.last3Months]: dayInMilliseconds * 31 * 3,\n  [DatingNamesEnum.last6Months]: dayInMilliseconds * 31 * 6,\n  [DatingNamesEnum.last1Year]: dayInMilliseconds * 366\n};\nexport const getPeriodMilliseconds = name => {\n  return datingNameWithPeriodMilliseconds[name];\n};\nexport const waitMs = async ms => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(true);\n    }, ms);\n  });\n};","map":{"version":3,"names":["DatingNamesEnum","capitalizeFirstLetter","string","charAt","toUpperCase","slice","parseDateStringIntoUTCDate","input","parts","split","year","Number","monthZero","day","Date","UTC","dayInMilliseconds","datingNameWithPeriodMilliseconds","all","last14Days","last30Days","last60Days","last3Months","last6Months","last1Year","getPeriodMilliseconds","name","waitMs","ms","Promise","resolve","reject","setTimeout"],"sources":["/Users/macbookpro/Desktop/ReactTask/src/helpers/helper-function.ts"],"sourcesContent":["export enum DatingNamesEnum {\n    all = \"all\",\n    last14Days = \"last14Days\",\n    last30Days = \"last30Days\",\n    last60Days = \"last60Days\",\n    last3Months = \"last3Months\",\n    last6Months = \"last6Months\",\n    last1Year = \"last1Year\",\n  }\n  \n  export function capitalizeFirstLetter(string: string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  export function parseDateStringIntoUTCDate(input: string /* 2010-01-02 */) {\n    const parts = input.split(\"-\");\n  \n    const year = Number(parts[0]);\n    const monthZero = Number(parts[1]) - 1; // Note: months are 0-based\n    const day = Number(parts[2]);\n  \n    return new Date(Date.UTC(year, monthZero, day));\n  }\n  \n  const dayInMilliseconds = 1000 * 60 * 60 * 24;\n  \n  const datingNameWithPeriodMilliseconds = {\n    [DatingNamesEnum.all]: null, //\n    [DatingNamesEnum.last14Days]: dayInMilliseconds * 14,\n    [DatingNamesEnum.last30Days]: dayInMilliseconds * 30,\n    [DatingNamesEnum.last60Days]: dayInMilliseconds * 60,\n    [DatingNamesEnum.last3Months]: dayInMilliseconds * 31 * 3,\n    [DatingNamesEnum.last6Months]: dayInMilliseconds * 31 * 6,\n    [DatingNamesEnum.last1Year]: dayInMilliseconds * 366,\n  };\n  \n  export const getPeriodMilliseconds = (name: DatingNamesEnum) => {\n    return datingNameWithPeriodMilliseconds[name];\n  };\n  \n  export const waitMs = async (ms: number) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(true);\n      }, ms);\n    });\n  };\n  "],"mappings":"AAAA,WAAYA,eAAe;AAQxB,WARSA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;AAAA,GAAfA,eAAe,KAAfA,eAAe;AAUzB,OAAO,SAASC,qBAAqB,CAACC,MAAc,EAAE;EACpD,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;AACzD;AAEA,OAAO,SAASC,0BAA0B,CAACC,KAAa,EAAmB;EACzE,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;EAE9B,MAAMC,IAAI,GAAGC,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAMI,SAAS,GAAGD,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACxC,MAAMK,GAAG,GAAGF,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;EAE5B,OAAO,IAAIM,IAAI,CAACA,IAAI,CAACC,GAAG,CAACL,IAAI,EAAEE,SAAS,EAAEC,GAAG,CAAC,CAAC;AACjD;AAEA,MAAMG,iBAAiB,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AAE7C,MAAMC,gCAAgC,GAAG;EACvC,CAACjB,eAAe,CAACkB,GAAG,GAAG,IAAI;EAAE;EAC7B,CAAClB,eAAe,CAACmB,UAAU,GAAGH,iBAAiB,GAAG,EAAE;EACpD,CAAChB,eAAe,CAACoB,UAAU,GAAGJ,iBAAiB,GAAG,EAAE;EACpD,CAAChB,eAAe,CAACqB,UAAU,GAAGL,iBAAiB,GAAG,EAAE;EACpD,CAAChB,eAAe,CAACsB,WAAW,GAAGN,iBAAiB,GAAG,EAAE,GAAG,CAAC;EACzD,CAAChB,eAAe,CAACuB,WAAW,GAAGP,iBAAiB,GAAG,EAAE,GAAG,CAAC;EACzD,CAAChB,eAAe,CAACwB,SAAS,GAAGR,iBAAiB,GAAG;AACnD,CAAC;AAED,OAAO,MAAMS,qBAAqB,GAAIC,IAAqB,IAAK;EAC9D,OAAOT,gCAAgC,CAACS,IAAI,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAOC,EAAU,IAAK;EAC1C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,UAAU,CAAC,MAAM;MACfF,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,EAAEF,EAAE,CAAC;EACR,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}